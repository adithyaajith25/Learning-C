***************************************************
NAME		: Adithya Ajith			CLASS	:S3 CSE-B
ROLL NO	: 5    				DATE	: 29/10/2022
	
	INFIX TO POSTFIX CONVETION AND EVALUATION
***************************************************
			
#include <stdio.h>
#include <string.h>

char A[100],P[100],S[100],P_nos[100];
int S_top=-1,P_top=-1;

int president(char x)
{	if (x=='^')
	{	return 1;
	}
	else if(x=='*'|| x=='/')
	{	return 2;
	}
	else if(x=='+'||x=='-')
	{	return 3;
	}
	else if (x=='('  || x== ')' )
	{	return 4;
	}
	else
	{	return 5;
	}
}

void S_push(char item)
{	S_top++;
	S[S_top]=item;
}

int S_pop()
{	int poped=S[S_top];
	S_top=S_top-1;
	return poped;
}

void P_push(char item)
{	P_top++;
	P[P_top]=item;
}




void infix(char A[])
{	int i=0;
	char poped,x,y;
	while (A[i]!=0)
	{	if (isalpha(A[i]) || isdigit(A[i]))
		{	P_push(A[i]);			
		}
		else if (A[i]=='(')
		{	S_push(A[i]);
		}
		else if(A[i]==')')
		{	poped=S_pop();	
			while (poped!='(')
			{	P_push(poped);
				poped=S_pop();
			}
		}
		else
		{	x=A[i];
			y=S[S_top];
			while (president(x)>=president(y))
			{	poped=S_pop();
				P_push(poped);
				y=S[S_top];
				if (S_top==-1 || y=='(')
				{	break;
				}
			}
			S_push(x);
		}
		i++;
	}
	while (S_top!=-1)
	{	poped=S_pop();
		P_push(poped);
	}
	printf("Postfix form is \n");
	for (i=0;i<P_top+1;i++){
		printf("%c",P[i]);

	}
	printf("\n");




}
	





int var_val(char x)
{	int x2;
	printf("Enter value for %c",x);
	scanf("%d",&x2);
	return x2;
}

void main()
{	int i,op1,op2,result;
	char x;
	printf("Enter Infix Expression");
	gets(A);
	infix(A);
		
	for(i=0;i<strlen(P);i++)
	{	if (isalpha(P[i]))
		{	
			S_push(var_val(P[i]));			
		}
		else 
		{	op2=S_pop();
			op1=S_pop();
				if (P[i]=='+')
				{
					result = (op1)+(op2);
					S_push(result);
				}
				else if(P[i]=='-')
				{	result = (op1)-(op2);
					S_push(result);
				}
				else if(P[i]=='*')
				{	result = (op1)*(op2);
					S_push(result);
				}
				else if(P[i]=='/')
				{	result = (op1)/(op2);
					S_push(result);
				}
				else if(P[i]=='^')
				{	result = (op1)^(op2);
					S_push(result);
				}
		}
	}
	printf("Final Answer is %d",S[S_top]);


}
			
			       
***************************************************
				OUTPUT
***************************************************

Enter Infix Expression(A+B)*(C-D)
Postfix form is 
AB+CD-*
Enter value for A2
Enter value for B3
Enter value for C4
Enter value for D5
Final Answer is -5